@model CBProject.Models.ViewModels.CategoryViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Category</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Master, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Master)
                @Html.ValidationMessageFor(model => model.Master, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group categories" style="display: none;">
        @Html.Label("Remove Categories:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(model => model.RemoveCategories, new SelectList(Model.MyCategories, "Id", "Name"), new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group categories" style="display: none;">
        @Html.Label("Add Categories:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.ListBoxFor(model => model.AddCategories, new SelectList(Model.OtherCategories, "Id", "Name"), new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $('input[name="Master"]').change(function () {
                console.log("master changed");
                if ($('input[name="Master"]:checked').length > 0) {
                    $(".categories").show();
                } else {
                    $(".categories").hide();
                }
            });
        });
    </script>
}
