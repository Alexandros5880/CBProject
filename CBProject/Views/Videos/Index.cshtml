@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using CBProject.Models

<!-- Setup Current User Access Level Security -->
@{
    var context = new ApplicationDbContext();
    var userStore = new UserStore<ApplicationUser, ApplicationRole, string, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>(context);
    var userManager = new CBProject.ApplicationUserManager(userStore);
    var currentUser = userManager.FindById(User.Identity.GetUserId());
    var roleStore = new RoleStore<ApplicationRole>(context);
    var roleManager = new RoleManager<ApplicationRole>(roleStore);

    var fullName = currentUser.FullName;
    var userImage = currentUser.ImagePath;

    if (userImage == null || userImage.IsEmpty())
    {
        userImage = "\\assets\\images\\users\\anonimus.png";
    }

    RoleLevel access = RoleLevel.SUPERLOW;

    foreach (var role in currentUser.Roles)
    {
        var myRole = roleManager.FindById(role.RoleId);
        if (myRole.Level == RoleLevel.FULL)
        {
            access = myRole.Level;
        }
        else if (myRole.Level == RoleLevel.PLUSSFULL)
        {
            if (access != RoleLevel.FULL)
            {
                access = myRole.Level;
            }
        }
        else if (myRole.Level == RoleLevel.MIDDLE)
        {
            if (access != RoleLevel.FULL &&
                access != RoleLevel.PLUSSFULL)
            {
                access = myRole.Level;
            }
        }
        else if (myRole.Level == RoleLevel.LOW)
        {
            if (access != RoleLevel.FULL &&
                access != RoleLevel.PLUSSFULL &&
                access != RoleLevel.MIDDLE)
            {
                access = myRole.Level;
            }
        }
        else if (myRole.Level == RoleLevel.SUPERLOW)
        {
            if (access != RoleLevel.FULL &&
                access != RoleLevel.PLUSSFULL &&
                access != RoleLevel.MIDDLE &&
                access != RoleLevel.LOW)
            {
                access = myRole.Level;
            }
        }
    }
}



@section styles {
    <link rel="stylesheet" href="~/Content/Ratting.css">
}



<h2>Videos</h2>



<p>
    @Html.ActionLink("Create New", "Create")
</p>



@Scripts.Render("~/bundles/jquery")

<script type="text/javascript">
    $(function () {

        // Open _Tag Modal
        $("body").on('click', '#tag-modal-button-video', function () {
            var id = $(this).attr('data-id');
            $.ajax({
                url: '/Videos/_Tag/' + id,
                type: 'GET',
                success: function (response) {
                    $('.tag-modal-video').html(response);
                }
            });
        });

        // Open _Review Modal
        $("body").on('click', '#comment-modal-button-video', function () {
            var id = $(this).attr('data-id');
            $.ajax({
                url: '/Videos/_Review/' + id,
                type: 'GET',
                success: function (response) {
                    $('.review-modal-video').html(response);
                }
            });
        });

        // Open _Delete Modal
        $("body").on('click', '#delete-modal-button-video', function () {
            var id = $(this).attr('data-id');
            $.ajax({
                url: '/Videos/_Delete/' + id,
                type: 'GET',
                success: function (response) {
                    $('.delete-modal-video').html(response);
                }
            });
        });

        // Open _Edit Modal
        $("body").on('click', '#edit-modal-button-video', function () {
            var id = $(this).attr('data-id');
            $.ajax({
                url: '/Videos/_Edit/' + id,
                type: 'GET',
                success: function (response) {
                    $('.edit-modal-video').html(response);
                }
            });
        });

        // Open _Details Modal
        $("body").on('click', '#details-modal-button-video', function () {
            var id = $(this).attr('data-id');
            $.ajax({
                url: '/Videos/_Details/' + id,
                type: 'GET',
                success: function (response) {
                    $('.details-modal-video').html(response);
                }
            });
        });

        // Open Watch Video Modal
        $("body").on('click', '#video-modal-button', function () {
            var id = $(this).attr('data-id');
            getLogedUser(function (user) {
                var access = false;
                user.roles.forEach(function (role) {
                    getRoleSync(role.roleId, function (role) {
                        console.log(role.level);
                        if (role.level > 0) {
                            access = true;
                        }
                    });
                });
                if (access) {
                    $.ajax({
                        url: '/Home/_Watch/' + id,
                        type: 'GET',
                        success: function (response) {
                            $('.modal-ebook-read').html(response);
                        }
                    });
                } else {
                    window.location = "/SubscriptionPackages/Subscribe";
                }
            });
        });

    });
</script>



<div class="table-responsive">
    <table class="table" id="videos">
        <thead>
            <tr>
                <th>Title</th>
                <th>Creator</th>
                <th>Cover</th>
                <th>Description</th>
                <th>Upload Date</th>
                <th>Rating</th>
                <th>Packages</th>
                <th></th>
            </tr>
        </thead>
    </table>
    <br />
    <br />
    <br />
</div>







<!-- Tag Modal -->
<div id="tag-modal-video" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Tag</h4>
            </div>
            <div class="modal-body tag-modal-video">

            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>

<!-- Review Modal -->
<div id="review-modal-video" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Comment</h4>
            </div>
            <div class="modal-body review-modal-video">

            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div id="delete-modal-video" class="modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete</h5>
            </div>
            <div class="modal-body delete-modal-video">

            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div id="edit-modal-video" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Modal Header</h4>
            </div>
            <div class="modal-body edit-modal-video">

            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>

<!-- Details Modal -->
<div id="details-modal-video" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Details</h4>
            </div>
            <div class="modal-body details-modal-video">

            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>

<!-- Video Modal -->
<div id="modal-fullscreen-xl" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="width: 50%;">
        <div class="modal-content modal-ebook-read">

        </div>
    </div>
</div>



@section scripts{
    <script>
        $(document).ready(function () {

            // Get Logged User and hes SubscriptionPakage
            var userAuthorized = @User.Identity.IsAuthenticated.ToString().ToLower();
            var loggedUser = null;
            if (userAuthorized) {
                getLogedUserSync(function (user) {
                    loggedUser = user;
                });
            }


            // When Modal Close Stop Video
            $('#modal-fullscreen-xl').on('hidden.bs.modal', function () {
                $(".myvideo").trigger('pause');
            })

            var table = $("#videos").DataTable({
                ajax: makeCall(),
                columns: [
                    {
                        data: "title",
                        render: function (data, type, video) {
                            return "<a href='/videos/PublicDetails/" + video.id + "'>" + video.title + "</a>";
                        }
                    },
                    {
                        data: "creator",
                        render: function (data, type, video) {
                            var fullName = "";
                            getUserByIdSync(video.creatorId, function (creator) {
                                fullName = creator.fullName;
                            });
                            return "<a>" + fullName + "</a>";
                        }
                    },
                    {
                        data: "Cover Photo",
                        render: function (data, type, video) {
                            return `
                                        <img alt="Cover Foto" src="${video.videoImagePath}" style="height: 77px;"/>
                                    `;
                        }
                    },
                    {
                        data: "Decription",
                        render: function (data, type, video) {
                            return `<a>${video.description}</a>`;
                        }
                    },
                    {
                        data: "UplaodDate",
                        render: function (data, type, video) {
                            return `<a>${video.uploadDate}</a>`;
                        }
                    },
                    {
                        data: "Rating",
                        render: function (data, type, video) {
                            return `
                                    <iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
                                    <form id="video-rating-form" method="post" action="/api/Video/AddRate" target="dummyframe">
                                        <input type="hidden" id="videoId" name="videoId" value="${video.id}">
                                        <input name="rate"
                                                class="rating rating-loading rate"
                                                data-min="0"
                                                data-max="5"
                                                data-step="0.1"
                                                value="${video.ratingsAVG}"
                                                onchange="this.form.submit()">
                                        <!--<input type="submit" value="Submit" />-->
                                    </form>
                                `;
                        }
                    },
                    {
                        data: "Packages",
                        render: function (data, type, video) {
                            return getPackages(video.subscribed, video.subscriptionPackages);
                        }
                    },
                    {
                        data: "Buttons",
                        render: function (data, type, video) {
                            var access = "@access.ToString()";
                            switch (access) {
                                case "SUPERLOW":
                                    return `
                                        <button type="button" id="comment-modal-button-video" class="btn btn-primary comment-modal-button-video" data-toggle="modal" data-target="#review-modal-video" data-id="${video.id}">Comment</button>
                                        <button type="button" id="details-modal-button-video" class="btn btn-info details-modal-button-video" data-toggle="modal" data-target="#details-modal-video" data-id="${video.id}">Details</button>
                                    `;
                                case "LOW":
                                    return `
                                        <button id="video-modal-button" class="btn btn-green btn-lg btn-open-modal more" data-toggle="modal" data-target="#modal-fullscreen-xl" data-id="${video.id}">Play</button>
                                        <button type="button" id="comment-modal-button-video" class="btn btn-primary comment-modal-button-video" data-toggle="modal" data-target="#review-modal-video" data-id="${video.id}">Comment</button>
                                        <button type="button" id="details-modal-button-video" class="btn btn-info details-modal-button-video" data-toggle="modal" data-target="#details-modal-video" data-id="${video.id}">Details</button>
                                    `;
                                case "MIDDLE":
                                    return `
                                        <button id="video-modal-button" class="btn btn-green btn-lg btn-open-modal more" data-toggle="modal" data-target="#modal-fullscreen-xl" data-id="${video.id}">Play</button>
                                        <button type="button" id="tag-modal-button-video" class="btn btn-dark tag-modal-button-video" data-toggle="modal" data-target="#tag-modal-video" data-id="${video.id}">Tag</button>
                                        <button type="button" id="details-modal-button-video" class="btn btn-info details-modal-button-video" data-toggle="modal" data-target="#details-modal-video" data-id="${video.id}">Details</button>
                                        <button type="button" id="edit-modal-button-video" class="btn btn-success edit-modal-button-video" data-toggle="modal" data-target="#edit-modal-video" data-id="${video.id}">Edit</button>
                                        <button type="button" id="delete-modal-button-video" class="btn btn-danger btn-delete delete-modal-button-video" data-toggle="modal" data-target="#delete-modal-video" data-id="${video.id}">Delete</button>
                                    `;
                                case "PLUSSFULL":
                                    return `
                                        <button id="video-modal-button" class="btn btn-green btn-lg btn-open-modal more" data-toggle="modal" data-target="#modal-fullscreen-xl" data-id="${video.id}">Play</button>
                                        <button type="button" id="tag-modal-button-video" class="btn btn-dark tag-modal-button-video" data-toggle="modal" data-target="#tag-modal-video" data-id="${video.id}">Tag</button>
                                        <button type="button" id="comment-modal-button-video" class="btn btn-primary comment-modal-button-video" data-toggle="modal" data-target="#review-modal-video" data-id="${video.id}">Comment</button>
                                        <button type="button" id="details-modal-button-video" class="btn btn-info details-modal-button-video" data-toggle="modal" data-target="#details-modal-video" data-id="${video.id}">Details</button>
                                        <button type="button" id="edit-modal-button-video" class="btn btn-success edit-modal-button-video" data-toggle="modal" data-target="#edit-modal-video" data-id="${video.id}">Edit</button>
                                        <button type="button" id="delete-modal-button-video" class="btn btn-danger btn-delete delete-modal-button-video" data-toggle="modal" data-target="#delete-modal-video" data-id="${video.id}">Delete</button>
                                    `;
                                case "FULL":
                                    return `
                                        <button id="video-modal-button" class="btn btn-green btn-lg btn-open-modal more" data-toggle="modal" data-target="#modal-fullscreen-xl" data-id="${video.id}">Play</button>
                                        <button type="button" id="tag-modal-button-video" class="btn btn-dark tag-modal-button-video" data-toggle="modal" data-target="#tag-modal-video" data-id="${video.id}">Tag</button>
                                        <button type="button" id="comment-modal-button-video" class="btn btn-primary comment-modal-button-video" data-toggle="modal" data-target="#review-modal-video" data-id="${video.id}">Comment</button>
                                        <button type="button" id="details-modal-button-video" class="btn btn-info details-modal-button-video" data-toggle="modal" data-target="#details-modal-video" data-id="${video.id}">Details</button>
                                        <button type="button" id="edit-modal-button-video" class="btn btn-success edit-modal-button-video" data-toggle="modal" data-target="#edit-modal-video" data-id="${video.id}">Edit</button>
                                        <button type="button" id="delete-modal-button-video" class="btn btn-danger btn-delete delete-modal-button-video" data-toggle="modal" data-target="#delete-modal-video" data-id="${video.id}">Delete</button>
                                    `;
                            }
                        }
                    }
                ],
                createdRow: function (row, data, dataIndex) {
                    // any manipulation in the row element
                    var ratingInput = $(row).find('.rating');
                    $(ratingInput).rating();

                }
            });


            function makeCall() {
                if (loggedUser.subscriptionPackage != null && loggedUser.subscriptionPackage != undefined) {
                    console.log(loggedUser);
                    return {
                        url: `/api/Video/product/all?userId=${loggedUser.id}&packageId=${loggedUser.subscriptionPackage.id}`,
                        dataSrc: ""
                    }
                }
                else {
                    return {
                        url: `/api/Video/user/all?userId=${loggedUser.id}`,
                        dataSrc: ""
                    }
                }
            }


        });
    </script>

    <script src="~/Scripts/Ratting.js"></script>
}