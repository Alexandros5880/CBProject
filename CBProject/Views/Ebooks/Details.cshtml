@model CBProject.Models.ViewModels.EbookViewModel

@{
    ViewBag.Title = "Details";
}
<div class="main-details-row">
    <div class="row ">
        <div class="col-md-5">
           
        </div>
        <div class="col-md-7">
            <p class="product-title"> @Html.DisplayFor(model => model.Title)</p>

            <br />
            <p class="product-description"> @Html.DisplayFor(model => model.Description)</p>
            <div class="row">
                <div class="col-md-1 raiting" >
                    <p id="raiting">Rating</p>
                </div>
                <div class="col-md-10" id="stars">
                    <span class="fa fa-star checked "></span>
                    <span class="fa fa-star checked"></span>
                    <span class="fa fa-star checked"></span>
                    <span class="fa fa-star"></span>
                    <span class="fa fa-star"></span>
                </div>

            </div>
            <button type="button" class="btn justify-content-end btn-subscribe">Subscribe Now</button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-3 col-md-offset-1 details-bar">
        <img style="width:100%;margin-top:5%;" src="~/img/image.jpg" alt="Card image cap">
        <h5><b>INCLUDES</b></h5>
        <p><img class="img-icon-index" src="~/img/icons-person.png" alt="person" /> Programming with mosh </p>
        <p><img class="img-icon-index" src="~/img/icon-video.png" alt="video" /> 22 hours on-demand video  </p>
        <p><img class="img-icon-index" src="~/img/icons-person.png" alt="person" /> Programming with mosh </p>
        <p><img class="img-icon-index" src="~/img/icon-video.png" alt="video" /> 22 hours on-demand video  </p>
    
        <hr />
       
        <h5><b>REQUIREMENTS</b></h5>
        <ul>
            <li>Nulla sagittis, turpis et molestie gravida</li>

            <li>Nulla sagittis, turpis et molestie gravida</li>
            <li>Nulla sagittis, turpis et molestie gravida</li>
            <li>Nulla sagittis, turpis et molestie gravida</li>
            <li>Nulla sagittis, turpis et molestie gravida</li>
            <li>Nulla sagittis, turpis et molestie gravida</li>
            <li>Nulla sagittis, turpis et molestie gravida</li>
        </ul>

        <br />
    </div>
    <div class="col-md-6">
        <div class="accordion" id="accordion-item">
            <div class="accordion-item">
                <p class="accordion-header" id="headingOne">
                    <button class="accordion-button my-accordion-item" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        Accordion Item #1
                    </button>
                </p>
                <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingTwo">
                    <button class="accordion-button collapsed my-accordion-item" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                        Accordion Item #2
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingTwo">
                    <button class="accordion-button collapsed my-accordion-item" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                        Accordion Item #2
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingTwo">
                    <button class="accordion-button collapsed my-accordion-item" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                        Accordion Item #2
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header" id="headingThree">
                    <button class="accordion-button my-accordion-item collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                        Accordion Item #3
                    </button>
                </h2>
                <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<h4>Ebook</h4>
<hr />
<dl class="dl-horizontal">
    <dt>
        <p class="product-title"> book </p>
        @Html.DisplayNameFor(model => model.Title)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Title)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Description)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Description)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Url)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Url)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.UploadDate)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.UploadDate)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Creator)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Creator)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.Category)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.Category)
    </dd>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>
