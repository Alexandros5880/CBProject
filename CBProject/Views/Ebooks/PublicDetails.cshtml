@model CBProject.Models.ViewModels.EbookViewModel
@using Microsoft.AspNet.Identity

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    if (float.IsNaN(Model.Rate))
    {
        Model.Rate = 0.0f;
    }
}


@section styles {
    <link rel="stylesheet" href="~/Content/Ratting.css">
    <link rel="stylesheet" href="~/Content/PublickDetails_Comments.css">
}

<!-- Main Details With Color -->
<div class="main-details-row">
    <div class="row ">
        <div class="col-md-5 col-sm-5">

        </div>
        <div class="col-md-5 col-md-offset-1 col-sm-5">
            <p class="product-title"> @Html.DisplayFor(model => model.Title)</p>
          
            <p class="product-description"> @Html.DisplayFor(model => model.Description)</p>
            <div class="row">
               
                <div class="col-md-12" id="stars">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
                        <form id="ebook-rating-form" method="post" action="/api/Ebook/AddRate" target="dummyframe">
                            <input type="hidden" id="ebookId" name="ebookId" value="@Model.ID">
                            <input name="rate"
                                   class="rating rating-loading rate"
                                   data-min="0"
                                   data-max="5"
                                   data-step="0.1"
                                   value="@Model.Rate"
                                   onchange="this.form.submit()">
                        </form>
                    }
                    else
                    {
                        <input id="input-rate-ebooks"
                               name="rate"
                               class="rating rating-loading"
                               data-min="0"
                               data-max="5"
                               data-step="0.1"
                               value="@Model.Rate"
                               disabled="disabled">
                    }
                </div>
            </div>
            <div class="subscribe-div">
                @*<button type="button" class="btn justify-content-end btn-subscribe">Subscribe Now</button>
                    <button style="margin-bottom:3%; margin-left: 1%;" type="button" class="btn justify-content-end btn-green" data-toggle="modal" data-target="#@Model.ID">Read</button>*@
            </div>
        </div>
    </div>
</div>

<!-- Modal Raed -->
<div id="@Html.DisplayFor(model=> model.ID)" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                <div class="row">
                    <div class="col-md-1">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
            </div>
            <div class="modal-body" style="text-align:center;">
                @{
                    var absolutePath = Server.MapPath(Model.EbookFilePath);
                    if (System.IO.File.Exists(absolutePath))
                    {
                        <embed src="@Url.Content(Model.EbookFilePath)" style="width:100%; height:87vh;" />
                    }
                    else
                    {
                        <h3 class="text-danger">No File Found.</h3>
                    }
                }
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Left Card with image INCLUDES && REQUIREMENTS -->
    <div class="col-md-3 col-md-offset-2 col-sm-4 col-sm-offset-0 details-bar">
        <img src=" @Html.DisplayFor(model => model.EbookImagePath)" style="width: 50%; margin-top: 5%; display: block; margin-left: auto; margin-right: auto;" alt="Card image cap" />
        <!-----------MOBILE ONLY---------->
        <div class="main-details-row-mobile">
            <div class="row ">
                <div class="col-md-5 col-sm-5">

                </div>
                <div class="col-md-5 col-md-offset-1 col-sm-5">
                    <p class="product-title"> @Html.DisplayFor(model => model.Title)</p>
                    <p class="product-description"> @Html.DisplayFor(model => model.Description)</p>
                    <div class="row">
                       
                        <div class="col-md-12" id="stars">
                            @if (User.Identity.IsAuthenticated)
                            {
                                <iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
                                <form id="ebook-rating-form" method="post" action="/api/Ebook/AddRate" target="dummyframe">
                                    <input type="hidden" id="ebookId" name="ebookId" value="@Model.ID">
                                    <input name="rate"
                                           class="rating rating-loading rate"
                                           data-min="0"
                                           data-max="5"
                                           data-step="0.1"
                                           value="@Model.Rate"
                                           onchange="this.form.submit()">
                                </form>
                            }
                            else
                            {
                                <input id="input-rate-ebooks"
                                       name="rate"
                                       class="rating rating-loading"
                                       data-min="0"
                                       data-max="5"
                                       data-step="0.1"
                                       value="@Model.Rate"
                                       disabled="disabled">
                            }
                        </div>
                    </div>
                    <div class="subscribe-div">
                        @*<button type="button" class="btn justify-content-end btn-subscribe">Subscribe Now</button>
                            <button style="margin-bottom:3%; margin-left: 1%;" type="button" class="btn justify-content-end btn-green" data-toggle="modal" data-target="#@Model.ID">Read</button>*@
                    </div>
                </div>
            </div>
        </div>
        <!-----------MOBILE ONLY - END---------->
        <hr style="border-top: 1px solid #c1c1c1;" />
        <h5><b>INCLUDES</b></h5>
        <p><img class="img-icon-index" src="~/img/icons-person.png" alt="person" /> Programming with <b>@Html.DisplayFor(model => model.Creator.FullName)</b>  </p>
        <p><img class="img-icon-index" src="~/img/icon-book.png" alt="video" /> 250 pages  </p>
        <p><img class="img-icon-index" src="~/img/icons-calendar.png" alt="person" /> Upload Date <b>@Html.DisplayFor(model => model.UploadDate)</b> </p>
        <p><img class="img-icon-index" src="~/img/icon-category.png" alt="video" /> Book category: @Html.DisplayFor(model => model.Category.Name) </p>
        <hr style="border-top: 1px solid #c1c1c1;" />
        <h5><b>REQUIREMENTS</b></h5>
        <ul>
            @foreach (var req in Model.Requirements)
            {
                <li><p>@req.Content</p></li>
            }
        </ul>
        <br />
    </div>
    <!-- Collapsible Groups -->
    <div class="col-md-5 col-sm-8">
        <div id="accordion">
            <div class="card">
                <div class="card-header" id="headingTwo">
                    <h5 class="mb-0">
                        <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            Collapsible Group Item #2
                        </button>
                    </h5>
                </div>
                <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordion">
                    <div class="card-body">
                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-header" id="headingTwo">
                    <h5 class="mb-0">
                        <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            Collapsible Group Item #2
                        </button>
                    </h5>
                </div>
                <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordion">
                    <div class="card-body">
                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-header" id="headingThree">
                    <h5 class="mb-0">
                        <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                            Collapsible Group Item #3
                        </button>
                    </h5>
                </div>
                <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordion">
                    <div class="card-body">
                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>






<!-- Show Comments / Add Comment -->
<div class="container">
    <div class="row">
        <div class="col-sm-10 col-sm-offset-1" id="logout">
            <div class="page-header">
                <h3 class="reviews">Leave your comment</h3>
            </div>
            <div class="comment-tabs">
                <ul class="nav nav-tabs" role="tablist">
                    <li class="active"><a href="#comments-logout" role="tab" data-toggle="tab"><h4 class="reviews text-capitalize">Comments</h4></a></li>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <li><a href="#add-comment" role="tab" data-toggle="tab"><h4 class="reviews text-capitalize">Add comment</h4></a></li>
                    }
                </ul>
                <div class="tab-content">
                    <!-- Comments -->
                    <div class="tab-pane active" id="comments-logout">
                        <ul class="media-list" id="comments-list">
                        </ul>
                    </div>
                    <!-- Add Comment -->
                    @if (User.Identity.IsAuthenticated)
                    {
                        <div class="tab-pane" id="add-comment">
                            <iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
                            <form action="/api/Ebook/AddComment" method="post" class="form-horizontal" id="commentForm" role="form" target="dummyframe">
                                <div class="form-group" id="comment-group-form">
                                    <label for="comment" class="col-sm-2 control-label">Comment</label>
                                    <div class="col-sm-10" id="comment-input-col">
                                        <input type="hidden" id="ebookId" name="ebookId" value="@Model.ID">
                                        <textarea class="form-control" name="comment" id="addComment" rows="5"></textarea>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-offset-2 col-sm-10">
                                        <button class="btn btn-success btn-circle text-uppercase" type="submit" id="submitComment"><span class="glyphicon glyphicon-send"></span> Summit comment</button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>





<br />
<br />
<br />







@section scripts {
    <script>
        $(document).ready(function () {

            var id = "@Html.Raw(Model.ID)";

            // Load Comments
            getReviewsByEbook(id, function (reviews) {
                reviews.slice(0, 4).forEach(function (review) {
                    getUserById(review.reviewerId, function (user) {
                        var imagePath = user.imagePath;
                        var fullname = user.fullName;
                        var comment = review.comment;
                        $('#comments-list').append(
                            `
                            <li class="media">
                                <a class="pull-left" href="#">
                                    <img class="media-object img-circle" src="${imagePath}" alt="profile" height="50">
                                </a>
                                <div class="media-body">
                                    <div class="well well-lg">
                                        <h5 class="media-heading text-uppercase reviews">${fullname}</h5>
                                        <p class="media-comment">
                                            ${comment}
                                        </p>
                                    </div>
                                </div>
                            </li>
                            `
                        );
                    });
                });
            });

            var subscribe = `<button type="button" class="btn justify-content-end btn-subscribe">Subscribe Now</button>`;
            var read = `<button style="margin-bottom:3%; margin-left: 1%;" type="button" class="btn justify-content-end btn-green" data-toggle="modal" data-target="#${@Model.ID}">Read</button>`;

            $(".rating").addClass("already_set");

            // If User has SubscriptionBackage Disable Subscribe else Enable
            var userAuthorized = @User.Identity.IsAuthenticated.ToString().ToLower();
            if (userAuthorized) {
                getLogedUser(function (user) {
                    getUserById(user.id, function (user) {
                        if (user.subscriptionPackage !== null) {
                            $('.subscribe-div').empty();
                            $('.subscribe-div').append(read);
                        } else {
                            $('.subscribe-div').append(subscribe);
                            $('.subscribe-div').append(read);
                        }
                        // Whene Subscribe Button Clicks goes to subscription package
                        $(document.body).on('click', 'button', function () {
                            if (this.classList.contains('btn-subscribe')) {
                                window.location.href = '/SubscriptionPackages/Subscribe';
                            }
                        });
                    });
                });
            } else {
                $('.subscribe-div').empty();
                $('.subscribe-div').append(subscribe);
                // Whene Subscribe Button Clicks goes to Login Page
                $(document.body).on('click', 'button', function () {
                    if (this.classList.contains('btn-subscribe')) {
                        window.location.href = '/Account/Login';
                    }
                });
            }

        });
    </script>

    <script src="~/Scripts/Ratting.js"></script>
}