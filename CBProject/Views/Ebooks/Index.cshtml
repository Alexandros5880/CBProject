@model IEnumerable<CBProject.Models.EntityModels.Ebook>

@{
    ViewBag.Title = "Index";
}

<div class="container">

    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create", "Ebooks", new { @class = "btn btn-default btn-create" })
    </p>
    <table class="table" id="ebooks">
        <thead>

            <tr>

                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Thumbnail)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Url)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UploadDate)
                </th>
                <th>
                    Category
                </th>
                <th>
                    Creator
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody>
        </tbody>


    </table>

    <div id="deletemodal" class="modal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete Ebook</h5>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this Ebook ?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary save-delete-modal">Save changes</button>
                    <button type="button" class="btn btn-secondary close-delete-modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div id="showmodal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                @{
                    Html.RenderPartial("_test");
                }
            </div>
        </div>
    </div>
    <button id='open' data-toggle="modal" data-target="#showmodal">open modal</button>

</div>


@section scripts{
    <script>
        $(document).ready(function () {
            const url = "https://" + window.location.host;
            console.log(url + "/api/ebooks");

            var table = $("#ebooks").DataTable({
                ajax: {
                    url: url + "/api/ebooks",
                    dataSrc: ""
                },
                columns: [

                    {
                        data: "title",
                        render: function (data, type, ebook) {
                            return "<a href='/ebooks/edit/" + ebook.id + "'>" + ebook.title + "</a>";
                        }

                    },
                    {
                        data: "description",
                        render: function (data, type, ebook) {
                            return ebook.description;
                        }

                    },
                    {
                        data: "thumbnail",
                        render: function (data, type, ebook) {
                            return ebook.thumbnail;
                        }

                    },
                    {
                        data: "url",
                        render: function (data, type, ebook) {
                            return ebook.url;
                        }

                    },
                    {
                        data: "uploadDate",
                        render: function (data, type, ebook) {
                            return ebook.uploadDate;
                        }

                    },
                    {
                        data: "category",
                        render: function (data, type, ebook) {
                            return ebook.category.name;
                        }

                    },
                    {
                        data: "creatorId",
                        render: function (data, type, ebook) {
                            return ebook.creatorId;
                        }

                    },
                    {
                        data: "id",
                        render: function (data, type, ebook) {
                            return "<a href='/ebooks/details/" + ebook.id + "'>Details</a> | <button class='btn-lind btn-delete' data-ebooks-id=" + ebook.id + ">Delete</button>";
                        }
                    }
                ]
            });

            $("#ebooks").on("click", ".btn-delete", function () {
                var button = $(this);

                $('#deletemodal').show(300);

                //if (confirm("Are you sure you want to delete this Ebook ?")) {
                //    $.ajax({
                //        url: url + "/api/ebooks/" + button.attr("data-ebooks-id"),
                //        method: "DELETE"
                //    }).done(function (data) {
                //        button.parents("tr").remove();
                //    }).fail(function (error) {
                //        console.log(error);
                //    });
                //}

                //bootbox.confirm("Are you sure you want to delete this Ebook ?", function (result) {
                //    if (result) {
                //        $.ajax({
                //            url: url + "/api/ebooks/" + button.attr("data-ebooks-id"),
                //            method: "DELETE"
                //        }).done(function (data) {
                //            button.parents("tr").remove();
                //        }).fail(function (error) {
                //            console.log(error);
                //        });

                //    }
                //});

            });

            $(".save-delete-modal").on("click", function () {
                $.ajax({
                    url: url + "/api/ebooks/" + button.attr("data-ebooks-id"),
                    method: "DELETE"
                }).done(function (data) {
                    button.parents("tr").remove();
                    $('#deletemodal').hide(300);
                }).fail(function (error) {
                    console.log(error);
                });
            });

            $(".close-delete-modal").on("click", function () {
                $('#deletemodal').hide(300);
            });
        });

        $(document).mouseup(function (e) {
            var container = $(".modal-content");
            if (!container.is(e.target) && container.has(e.target).length === 0) {
                $("#deletemodal").hide(300);
            }
        });
    </script>
}




