@model IEnumerable<CBProject.Models.ViewModels.EbookViewModel>








<link rel="stylesheet" href="~/Content/Ratting.css">



@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using CBProject.Models

@{
    //var fullname = ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst("FullName");
    //var user_image = ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst("ImagePath");


    var context = new ApplicationDbContext();
    var userStore = new UserStore<ApplicationUser, ApplicationRole, string, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>(context);
    var userManager = new CBProject.ApplicationUserManager(userStore);
    var currentUser = userManager.FindById(User.Identity.GetUserId());
    var roleStore = new RoleStore<ApplicationRole>(context);
    var roleManager = new RoleManager<ApplicationRole>(roleStore);


    var fullName = currentUser.FullName;
    var userImage = currentUser.ImagePath;
    RoleLevel access = RoleLevel.SUPERLOW;

    if (User.Identity.IsAuthenticated)
    {
        foreach (var role in currentUser.Roles)
        {
            var myRole = roleManager.FindById(role.RoleId);
            if (myRole.Level == RoleLevel.FULL)
            {
                access = myRole.Level;
            }
            else if (myRole.Level == RoleLevel.PLUSSFULL)
            {
                if (access != RoleLevel.FULL)
                {
                    access = myRole.Level;
                }
            }
            else if (myRole.Level == RoleLevel.MIDDLE)
            {
                if (access != RoleLevel.FULL &&
                    access != RoleLevel.PLUSSFULL)
                {
                    access = myRole.Level;
                }
            }
            else if (myRole.Level == RoleLevel.LOW)
            {
                if (access != RoleLevel.FULL &&
                    access != RoleLevel.PLUSSFULL &&
                    access != RoleLevel.MIDDLE)
                {
                    access = myRole.Level;
                }
            }
            else if (myRole.Level == RoleLevel.SUPERLOW)
            {
                if (access != RoleLevel.FULL &&
                    access != RoleLevel.PLUSSFULL &&
                    access != RoleLevel.MIDDLE &&
                    access != RoleLevel.LOW)
                {
                    access = myRole.Level;
                }
            }
        }
    }
}

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@Scripts.Render("~/bundles/jquery")

<div class="table-responsive">
    <table class="table" id="ebooks">
        <thead>

            <tr>

                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Description)
                </th>
                @if (access == RoleLevel.FULL || access == RoleLevel.PLUSSFULL)
                {
                    <th>
                        @Html.DisplayNameFor(model => model.Thumbnail)
                    </th>

                }
                <th>
                    @Html.DisplayNameFor(model => model.UploadDate)
                </th>
                <th>
                    Cover
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Creator)
                </th>
                <th>
                    Category
                </th>
                <th>
                    Rating
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody>
        </tbody>

        @foreach (var item in Model)
        {
            if (float.IsNaN(item.Rate))
            {
                item.Rate = 0.0f;
            }
            <tr>

                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                @if (access == RoleLevel.FULL || access == RoleLevel.PLUSSFULL)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Thumbnail)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.UploadDate)
                </td>
                <td>
                    <img alt="Cover Foto" src="@item.EbookImagePath" style="height:100px;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Creator.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @using (Html.BeginForm("AddRate", "Ebooks", new { ebookId = item.ID }, FormMethod.Post, new { id = "ebook-rating-form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => item.ID)
                        <input id="input-1"
                               name="rate"
                               class="rating rating-loading"
                               data-min="0"
                               data-max="5"
                               data-step="0.1"
                               value="@Html.DisplayFor(modelItem => item.Rate)"> <!-- onchange="$('#ebook-rating-form').submit()" -->
                        <input type="submit" value="Submit" />
                    }
                </td>
                <td>

                    @if (access == RoleLevel.FULL)
                    {
                        <button type="button" class="btn btn-dark tag-modal-button-ebook" data-toggle="modal" data-target="#tag-modal-ebook" data-id="@item.ID">Tag</button>
                        <button type="button" class="btn btn-primary comment-modal-button-ebook" data-toggle="modal" data-target="#review-modal-ebook" data-id="@item.ID">Comment</button>
                        <button type="button" class="btn btn-info details-modal-button-ebook" data-toggle="modal" data-target="#details-modal-ebook" data-id="@item.ID">Details</button>
                        <button type="button" class="btn btn-success edit-modal-button-ebook" data-toggle="modal" data-target="#edit-modal-ebook" data-id="@item.ID">Edit</button>
                        <button type="button" class="btn btn-danger delete-modal-button-ebook" data-toggle="modal" data-target="#delete-modal-ebook" data-id="@item.ID">Delete</button>
                    }
                    else if (access == RoleLevel.PLUSSFULL)
                    {
                        <button type="button" class="btn btn-primary comment-modal-button-ebook" data-toggle="modal" data-target="#review-modal-ebook" data-id="@item.ID">Comment</button>
                        <button type="button" class="btn btn-success edit-modal-button-ebook" data-toggle="modal" data-target="#edit-modal-ebook" data-id="@item.ID">Edit</button>
                        <button type="button" class="btn btn-info details-modal-button-ebook" data-toggle="modal" data-target="#details-modal-ebook" data-id="@item.ID">Details</button>
                        <button type="button" class="btn btn-danger delete-modal-button-ebook" data-toggle="modal" data-target="#delete-modal-ebook" data-id="@item.ID">Delete</button>
                    }
                    else if (access == RoleLevel.MIDDLE)
                    {
                        <button type="button" class="btn btn-info details-modal-button-ebook" data-toggle="modal" data-target="#review-modal-ebook" data-id="@item.ID">Details</button>
                        <button type="button" class="btn btn-success edit-modal-button-ebook" data-toggle="modal" data-target="#edit-modal-ebook" data-id="@item.ID">Edit</button>
                        <button type="button" class="btn btn-info details-modal-button-ebook" data-toggle="modal" data-target="#details-modal-ebook" data-id="@item.ID">Details</button>
                        <button type="button" class="btn btn-danger delete-modal-button-ebook" data-toggle="modal" data-target="#delete-modal-ebook" data-id="@item.ID">Delete</button>
                    }
                    else if (access == RoleLevel.LOW)
                    {
                        <button type="button" class="btn btn-primary comment-modal-button-ebook" data-toggle="modal" data-target="#review-modal-ebook" data-id="@item.ID">Comment</button>
                    }
                    else if (access == RoleLevel.SUPERLOW)
                    {
                        <button type="button" class="btn btn-primary comment-modal-button-ebook" data-toggle="modal" data-target="#review-modal-ebook" data-id="@item.ID">Comment</button>
                    }
                    @*@Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |*@
                    @*@Html.ActionLink("Delete", "Delete", new { id = item.ID })*@
                </td>
            </tr>
        }

    </table>
</div>



<!-- Add Tag Modal -->
<div id="tag-modal-ebook" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Tag</h4>
            </div>
            <div class="modal-body">

                <input id="myId" class="form-control" readonly="readonly" />

                @*@using (Html.BeginForm("AddTag", "Ebooks", new { ebookId = item.ID }, FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => item.ID)

            <div style="margin: 7px;">
                <i class="fas fa-pencil-alt prefix" style="margin-left: 11%;"></i>
                <textarea class="md-textarea form-control" rows="3" name="title" style="margin: 0 auto;"></textarea>
                <input type="submit" value="Save" class="btn btn-default" style="margin-left: 80%; margin-top: 11px;" />
            </div>
        }*@

            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>
    </div>
</div>

<!-- Add Review Modal -->
<div id="review-modal-ebook" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Comment</h4>
            </div>
            <div class="modal-body">
                <input id="myId" class="form-control" readonly="readonly" />

                @*@using (Html.BeginForm("AddReview", "Ebooks", new { ebookId = item.ID }, FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => item.ID)

            <div style="margin: 7px;">
                <i class="fas fa-pencil-alt prefix" style="margin-left: 11%;"></i>
                <textarea class="md-textarea form-control" rows="3" name="comment" style="margin: 0 auto;"></textarea>
                <input type="submit" value="Save" class="btn btn-default" style="margin-left: 80%; margin-top: 11px;" />
            </div>
        }*@

            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
            </div>
        </div>
    </div>
</div>

<!-- Delete This Ebook Modal -->
<div id="delete-modal-ebook" class="modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Ebook</h5>
            </div>
            <div class="modal-body">
                <input id="myId" class="form-control" readonly="readonly" />
                <p>Are you sure you want to delete this Ebook ?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary save-delete-modal">Delete</button>
                <button type="button" class="btn btn-secondary close-delete-modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- _Edit Modal -->
<div id="edit-modal-ebook" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Edit</h4>
            </div>
            <div class="modal-body edit-modal-ebook">
                <input id="myId" class="form-control" readonly="readonly" />
                @*@{ Html.RenderPartial("_Edit", item); }*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- _Details Modal -->
<div id="details-modal-ebook" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Details</h4>
            </div>
            <div class="modal-body details-modal-ebook">
                <input id="myId" class="form-control" readonly="readonly" />
                @*@{ Html.RenderPartial("_Details", item); }*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>






@section scripts{
    <script>
        $(document).ready(function () {

            // When Open Modal Paw Id
            $('#tag-modal-ebook').on('show.bs.modal', function (e) {
                var Id = $(e.relatedTarget).data('id');
                $(e.currentTarget).find('input[id="myId"]').val(Id);
            });

            $('#review-modal-ebook').on('show.bs.modal', function (e) {
                var Id = $(e.relatedTarget).data('id');
                $(e.currentTarget).find('input[id="myId"]').val(Id);
            });

            $('#delete-modal-ebook').on('show.bs.modal', function (e) {
                var Id = $(e.relatedTarget).data('id');
                $(e.currentTarget).find('input[id="myId"]').val(Id);
            });

            $('#edit-modal-ebook').on('show.bs.modal', function (e) {
                var Id = $(e.relatedTarget).data('id');
                $(e.currentTarget).find('input[id="myId"]').val(Id);
            });

            $('#details-modal-ebook').on('show.bs.modal', function (e) {
                var Id = $(e.relatedTarget).data('id');
                $(e.currentTarget).find('input[id="myId"]').val(Id);
            });



            $("#ebooks").on("click", ".btn-delete", function () {
                var button = $(this);
                $('#deletemodal').show(300);
                $(".save-delete-modal").on("click", function () {
                    $.ajax({
                        url: "/api/ebooks/" + button.attr("data-id"),
                        method: "DELETE"
                    }).done(function (data) {
                        button.parents("tr").remove();
                        $('#deletemodal').hide(300);
                    }).fail(function (error) {
                        console.log("Error: " + error);
                    });
                });
                $(".close-delete-modal").on("click", function () {
                    $('#deletemodal').hide(300);
                });
            });
        });
        $(document).mouseup(function (e) {
            var container = $(".modal-content");
            if (!container.is(e.target) && container.has(e.target).length === 0) {
                $("#deletemodal").hide(300);
            }
        });
    </script>

    <script src="~/Scripts/Ratting.js"></script>
}



