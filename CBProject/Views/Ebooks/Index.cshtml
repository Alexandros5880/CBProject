@model IEnumerable<CBProject.Models.ViewModels.EbookViewModel>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table" id="ebooks">
    <thead>

        <tr>

            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Thumbnail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Url)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UploadDate)
            </th>
            <th>
                Category
            </th>
            <th>
                Creator
            </th>
            <th></th>
        </tr>
    </thead>

    <tbody>
    </tbody>

    @foreach (var item in Model)
    {
<tr>

    <td>
        @Html.DisplayFor(modelItem => item.Title)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Description)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Thumbnail)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Url)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.UploadDate)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Category.Name)
    </td>
    @*<td>
        @Html.DisplayFor(modelItem => item.CreatorId)
    </td>*@
    <td>
        <div id="myModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Modal Header</h4>
                    </div>
                    <div class="modal-body">
                        @{
                            Html.RenderPartial("_Details", item);
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <div id="editModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Modal Header</h4>
                    </div>
                    <div class="modal-body">
                        @{
                            Html.RenderPartial("_Edit", item);
                        }
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
        @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
        @Html.ActionLink("Details", "Details", new { id = item.ID }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.ID })
        <button type="button" data-id="@item.ID" class="btn btn-info btn-lg" data-toggle="modal" data-target="#editModal">Edit</button>
        <button type="button" data-id="@item.ID" class="btn btn-info btn-lg" data-toggle="modal" data-target="#myModal">Open Modal</button>
    </td>
</tr>

    }

</table>

<<<<<<< HEAD
                    },
                    {
                        data: "thumbnail",
                        render: function (data, type, ebook) {
                            return ebook.thumbnail;
                        }

                    },
                    {
                        data: "url",
                        render: function (data, type, ebook) {
                            return ebook.url;
                        }

                    },
                    {
                        data: "uploadDate",
                        render: function (data, type, ebook) {
                            return ebook.uploadDate;
                        }

                    },
                    {
                        data: "category",
                        render: function (data, type, ebook) {
                            return ebook.category.name;
                        }

                    },
                    {
                        data: "creatorId",
                        render: function (data, type, ebook) {
                            return ebook.creatorId;
                        }

                    },
                    {
                        data: "id",
                        render: function (data, type, ebook) {
                            return "<a href='/ebooks/details/" + ebook.id + "'>Details</a> | <button class='btn-lind btn-delete' data-ebooks-id=" + ebook.id + ">Delete</button>";
                        }
                    }
                ]
            });

          
            $("#ebooks").on("click", ".btn-delete", function () {
                var button = $(this);

                $('#deletemodal').show(300);

                $(".save-delete-modal").on("click", function () {
                    $.ajax({
                        url: url + "/api/ebooks/" + button.attr("data-ebooks-id"),
                        method: "DELETE"
                    }).done(function (data) {
                        button.parents("tr").remove();
                        $('#deletemodal').hide(300);
                    }).fail(function (error) {
                        console.log("Error: " + error);
                    });
                });

                $(".close-delete-modal").on("click", function () {
                    $('#deletemodal').hide(300);
                });

                //if (confirm("Are you sure you want to delete this Ebook ?")) {
                //    $.ajax({
                //        url: url + "/api/ebooks/" + button.attr("data-ebooks-id"),
                //        method: "DELETE"
                //    }).done(function (data) {
                //        button.parents("tr").remove();
                //    }).fail(function (error) {
                //        console.log(error);
                //    });
                //}

                //bootbox.confirm("Are you sure you want to delete this Ebook ?", function (result) {
                //    if (result) {
                //        $.ajax({
                //            url: url + "/api/ebooks/" + button.attr("data-ebooks-id"),
                //            method: "DELETE"
                //        }).done(function (data) {
                //            button.parents("tr").remove();
                //        }).fail(function (error) {
                //            console.log(error);
                //        });

                //    }
                //});
            });

            
        });

        $(document).mouseup(function (e) {
            var container = $(".modal-content");
            if (!container.is(e.target) && container.has(e.target).length === 0) {
                $("#deletemodal").hide(300);
            }
        });

    </script>
}
=======
>>>>>>> Theodora2




   
