@model CBProject.Models.ViewModels.HomeViewModel

@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using CBProject.Models


@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    //var fullname = ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst("FullName");
    //var user_image = ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst("ImagePath");

    var context = new ApplicationDbContext();
    var userStore = new UserStore<ApplicationUser, ApplicationRole, string, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>(context);
    var userManager = new CBProject.ApplicationUserManager(userStore);
    var currentUser = userManager.FindById(User.Identity.GetUserId());
    var roleStore = new RoleStore<ApplicationRole>(context);
    var roleManager = new RoleManager<ApplicationRole>(roleStore);

    RoleLevel access = RoleLevel.SUPERLOW;

    if (User.Identity.IsAuthenticated)
    {

        var fullName = currentUser.FullName;
        var userImage = currentUser.ImagePath;

        foreach (var role in currentUser.Roles)
        {
            var myRole = roleManager.FindById(role.RoleId);
            if (myRole.Level == RoleLevel.FULL)
            {
                access = myRole.Level;
            }
            else if (myRole.Level == RoleLevel.PLUSSFULL)
            {
                if (access != RoleLevel.FULL)
                {
                    access = myRole.Level;
                }
            }
            else if (myRole.Level == RoleLevel.MIDDLE)
            {
                if (access != RoleLevel.FULL &&
                    access != RoleLevel.PLUSSFULL)
                {
                    access = myRole.Level;
                }
            }
            else if (myRole.Level == RoleLevel.LOW)
            {
                if (access != RoleLevel.FULL &&
                    access != RoleLevel.PLUSSFULL &&
                    access != RoleLevel.MIDDLE)
                {
                    access = myRole.Level;
                }
            }
            else if (myRole.Level == RoleLevel.SUPERLOW)
            {
                if (access != RoleLevel.FULL &&
                    access != RoleLevel.PLUSSFULL &&
                    access != RoleLevel.MIDDLE &&
                    access != RoleLevel.LOW)
                {
                    access = myRole.Level;
                }
            }
        }
    }

}



<style>
    #filter-slidebar > li {
        margin-top: 11% !important;
        text-align: center;
    }
    #search-addon:hover {
        cursor: pointer;
    }
    .drop-down-buttons {
        margin-top: 5px;
    }

    #subscription-container {
        text-align: center;
        margin-top: 33%;
    }
    .subscribe-button {
        border-radius: 11px;
        background-color: red;
        color: #ffffff;
        padding: 11px;
    }
    .subscribe-button:hover {
        color: #ffffff;
        background-color: darkred;
    }
</style>


<script>
    function search() {
        var ebooks = $("#ebooks-input:checked").val() ? true : false;
        var videos = $("#videos-input:checked").val() ? true : false;;
        var category = $("#category-search-button").val();
        var tag = $("#tag-search-button").val();
        var title = $("#title-search-button").val();
        var teacher = $("#teacher-search-button").val();


        var sendData = {
            EbooksName: ebooks,
            VideosName: videos,
            CategoryName: category,
            TagName: tag,
            TitleName: title,
            TeacherName: teacher
        };

        $.ajax({
            type: "POST",
            url: "/api/products/search/filters",
            data: sendData,
            success: function (data) {
                if (data) {
                    if (data.videos && videos) {
                        $(".contents").empty();
                        data.videos.forEach(video => {
                            $(".contents").append(
                                `
                            <div class="col-md-3 " id="ourHolder" data-item="${video.category}">
                                <div class="card item" id="card-video">
                                    <div style="width:100%; text-align:center; margin-top: 5%;">
                                        <img alt="Cover Foto" src="${video.videoImagePath}" style="height:150px;" />
                                        <h4 style="margin-top: 5%;">${video.title}</h4>
                                    </div>
                                    <div class="card-body text-center">
                                        <p class="card-text"> ${video.description} </p>
                                        <p class="card-text"> ${video.title}  </p>
                                        <br />
                                        <a href="#" class="btn btn-card">More</a>
                                    </div>
                                </div>
                            </div>
                            `
                            );
                        });
                    }
                    if (data.ebooks && ebooks) {
                        $(".contents").empty();
                        data.videos.forEach(ebook => {
                            $(".contents").append(
                                `
                            <div class="col-md-3 " id="ourHolder" data-item="${ebook.category}">
                                <div class="card item" id="card-video">
                                    <div style="width:100%; text-align:center; margin-top: 5%;">
                                        <img alt="Cover Foto" src="${ebook.videoImagePath}" style="height:150px;" />
                                        <h4 style="margin-top: 5%;">${ebook.title}</h4>
                                    </div>
                                    <div class="card-body text-center">
                                        <p class="card-text"> ${ebook.description} </p>
                                        <p class="card-text"> ${ebook.title}  </p>
                                        <br />
                                        <a href="#" class="btn btn-card">More</a>
                                    </div>
                                </div>
                            </div>
                            `
                            );
                        });
                    }
                }
            },
            error: function (error) {
                console.log(error);
            }
        });
    }
</script>





<div class="row" style="margin-top: 50px !important; margin-bottom: 50px !important;">

    <!-- Filters SlideBar -->
    <div class="col-md-2">
        <ul class="nav flex-column" id="filter-slidebar">
            <li class="nav-item">
                <fieldset id="group1">
                    <div class="row">
                        <div class="col-md-6">
                            <label class="form-check-label" for="ebooks-input">Ebooks</label>
                            <input type="radio" id="ebooks-input" name="group1" style="margin-right: 5%;" checked>
                        </div>
                        <div class="col-md-6">
                            <label class="form-check-label" for="videos-input">Videos</label>
                            <input type="radio" id="videos-input" name="group1">
                        </div>
                    </div>
                </fieldset>
            </li>
            <li class="nav-item">
                <input id="category-search-button" type="search" class="form-control rounded" placeholder="Search Category" aria-label="Search"
                       aria-describedby="search-addon" />
            </li>
            <li class="nav-item">
                <input id="tag-search-button" type="search" class="form-control rounded" placeholder="Search Tag" aria-label="Search"
                       aria-describedby="search-addon" />
            </li>
            <li class="nav-item">
                <input id="title-search-button" type="search" class="form-control rounded" placeholder="Search Title" aria-label="Search"
                       aria-describedby="search-addon" />
            </li>
            <li class="nav-item">
                <input id="teacher-search-button" type="search" class="form-control rounded" placeholder="Search Teacher" aria-label="Search"
                       aria-describedby="search-addon" />
            </li>
            <li>
                <button class="btn btn-search" onclick="search();">
                    Search
                    <i class="fa fa-search"></i>
                </button>
            </li>
        </ul>
        <br />
        <div id="subscription-container">
            @Html.ActionLink("Subscribe Now", "Subscribe", "SubscriptionPackages", null, new { @class = "subscribe-button" })
        </div>
    </div>

    <!-- Main Content -->
    <div class="col-md-10">
        <div class="container-fluid">
            <div class="grey-row">
                <div class="container">
                    <br />
                    <br />

                    <div class="row contents">
                        @foreach (var video in Model.Videos.Take(8))
                        {
                            <div class="col-md-3 " id="ourHolder" data-item="@video.Category">
                                <div class="card item" id="card-video">
                                    <div style="width:100%; text-align:center; margin-top: 5%;">
                                        <img alt="Cover Foto" src="@video.VideoImagePath" style="height:150px;" />
                                        <h4 style="margin-top: 5%;">@video.Title</h4>
                                    </div>
                                    @*<img class="card-img-top" style="width:100%" src="~/img/@Url.Content(video.Thumbnail)" alt="Card image cap">*@
                                    <div class="card-body text-center">
                                        <p class="card-text"> @video.Description </p>
                                        <p class="card-text"> @video.Creator.FullName  </p>
                                        <br />
                                        <a href="#" class="btn btn-card">More</a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <br />
                    <br />
                </div>
            </div>
        </div>
    </div>

</div>


























@*<div class="row" id="ebooks-list">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayName("Title")
                </th>
                <th>
                    @Html.DisplayName("Category")
                </th>
                <th>
                    @Html.DisplayName("Creator")
                </th>
                <th>
                    @Html.DisplayName("Cover")
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.Ebooks)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Creator.FullName)
                    </td>
                    <td>
                        <img src="@Html.DisplayFor(modelItem => item.EbookImagePath)" alt="Ebook cover foto." />
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                    </td>
                </tr>
            }
        </table>
    </div>



    <div class="row" id="videos-list">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayName("Title")
                </th>
                <th>
                    @Html.DisplayName("Category")
                </th>
                <th>
                    @Html.DisplayName("Creator")
                </th>
                <th>
                    @Html.DisplayName("Cover")
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.Videos)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Creator.FullName)
                    </td>
                    <td>
                        <img src="@Html.DisplayFor(modelItem => item.VideoImagePath)" alt="Ebook cover foto." />
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                    </td>
                </tr>
            }
        </table>
    </div>*@
