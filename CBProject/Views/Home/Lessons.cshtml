@model CBProject.Models.ViewModels.HomeViewModel

@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using CBProject.Models



@section styles {
    <link rel="stylesheet" href="~/Content/Lessons.css" />
    <link rel="stylesheet" href="~/Content/Ratting.css">
}




@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    //var fullname = ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst("FullName");
    //var user_image = ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst("ImagePath");

    var context = new ApplicationDbContext();
    var userStore = new UserStore<ApplicationUser, ApplicationRole, string, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>(context);
    var userManager = new CBProject.ApplicationUserManager(userStore);
    var currentUser = userManager.FindById(User.Identity.GetUserId());
    var roleStore = new RoleStore<ApplicationRole>(context);
    var roleManager = new RoleManager<ApplicationRole>(roleStore);

    RoleLevel access = RoleLevel.SUPERLOW;

    if (User.Identity.IsAuthenticated)
    {

        var fullName = currentUser.FullName;
        var userImage = currentUser.ImagePath;

        foreach (var role in currentUser.Roles)
        {
            var myRole = roleManager.FindById(role.RoleId);
            if (myRole.Level == RoleLevel.FULL)
            {
                access = myRole.Level;
            }
            else if (myRole.Level == RoleLevel.PLUSSFULL)
            {
                if (access != RoleLevel.FULL)
                {
                    access = myRole.Level;
                }
            }
            else if (myRole.Level == RoleLevel.MIDDLE)
            {
                if (access != RoleLevel.FULL &&
                    access != RoleLevel.PLUSSFULL)
                {
                    access = myRole.Level;
                }
            }
            else if (myRole.Level == RoleLevel.LOW)
            {
                if (access != RoleLevel.FULL &&
                    access != RoleLevel.PLUSSFULL &&
                    access != RoleLevel.MIDDLE)
                {
                    access = myRole.Level;
                }
            }
            else if (myRole.Level == RoleLevel.SUPERLOW)
            {
                if (access != RoleLevel.FULL &&
                    access != RoleLevel.PLUSSFULL &&
                    access != RoleLevel.MIDDLE &&
                    access != RoleLevel.LOW)
                {
                    access = myRole.Level;
                }
            }
        }
    }

}



@Scripts.Render("~/bundles/jquery")



<script type="text/javascript">
    $(function () {

        // Open Read Ebooks Modal
        $("body").on('click', '#ebook-modal-button', function () {
            var id = $(this).attr('data-id');
            $.ajax({
                url: '/Home/_Read/' + id,
                type: 'GET',
                success: function (response) {
                    $('.modal-ebook-read').html(response);
                }
            });
        });

        // Open Watch Video Modal
        $("body").on('click', '#video-modal-button', function () {
            var id = $(this).attr('data-id');
            $.ajax({
                url: '/Home/_Watch/' + id,
                type: 'GET',
                success: function (response) {
                    $('.modal-ebook-read').html(response);
                }
            });
        });

    });
</script>


<!-- Filters Top Nav -->
<div class="container">
    <nav class="navbar navbar-light bg-light justify-content-between lessons-top-navbar">
        <h3 id="lessons-big-title" class="animate__animated animate__fadeInLeft"><strong>Chillin and searching something...</strong></h3>
        <div class="row lessons-top-grid">
            <div class="col-sm-6">
                <div class="form-inline lessons-top-nav-filters-buttons">
                    <span class="dropdown left-filter">
                        <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown">
                            <span class="glyphicon glyphicon-filter"></span>
                            Filter
                            <span class="glyphicon glyphicon-menu-down"></span>
                        </button>
                        <ul class="dropdown-menu left-filter-menu">
                            <li class="ebooks-filter"><a href="#" class="ebooks-filter">Ebooks</a></li>
                            <li class="videos-filter"><a href="#" class="videos-filter">Videos</a></li>
                        </ul>
                    </span>
                    <span class="dropdown right-filter">
                        <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown">
                            <span class="glyphicon glyphicon-sort-by-attributes"></span>
                            Sort By
                            <span class="glyphicon glyphicon-menu-down"></span>
                        </button>
                        <ul class="dropdown-menu right-filter-menu">
                            <li class="lessons-ratings"><a href="#" class="lessons-ratings">Rating</a></li>
                            <li class="created-date"><a href="#" class="created-date">Created Date</a></li>
                        </ul>
                    </span>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-inline search-top-input">
                    <input id="lessons-top-search-input" class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                    <button class="btn btn-search search-top-button" type='button'>
                        Search
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </div>
    </nav>
</div>

<!-- Main Container With Videos/Ebooks -->
<div class="container-fluid main-content">
    <div class="grey-row">
        <div class="container">
            <br />
            <br />

            <div class="row contents">

            </div>

            <br />
            <br />
        </div>
        <div class="col-lg-12" style="text-align:center;">
            <nav>
                <ul class="pagination pagination-lg justify-content-center pagination-content">
                </ul>
            </nav>
        </div>
    </div>
</div>

<!-- Ebook Modal -->
<div id="modal-fullscreen-xl" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="width: 90%;">
        <div class="modal-content modal-ebook-read">
            
        </div>
    </div>
</div>



@section scripts {
    <script>
        $(document).ready(function () {

            // When Modal Close Stop Video
            $('#modal-fullscreen-xl').on('hidden.bs.modal', function () {
                $(".myvideo").trigger('pause');
            })

            var userAuthorized = @User.Identity.IsAuthenticated.ToString().ToLower();

            var ebooks = false;
            var videos = true;
            var lessonsRatings = true;
            var createdDate = false;
            var search = "";
            var pages = 1;
            var page = 1;


            // Setup Pages
            getVideosPages(function (pagesNumber) {
                pages = pagesNumber;
                updatePaginationButtons();
            });

            // Load The First Items Whe Page Is Loading
            searchTop(ebooks, videos, lessonsRatings, createdDate, search, page);

            // Search Button Top Clicks
            $(document.body).on('click', 'button', function () {
                if (this.classList.contains('search-top-button')) {
                    var search = $("#lessons-top-search-input").val();
                    if (search.length != 0) {
                        page = 1;
                        searchTop(ebooks, videos, lessonsRatings, createdDate, search, null, true);
                    } else {
                        searchTop(ebooks, videos, lessonsRatings, createdDate, search, 1);
                    }
                }
            });

            // Search Enter Event
            $('#lessons-top-search-input').keypress(function (event) {
                if (event.keyCode == 13) {
                    var search = $("#lessons-top-search-input").val();
                    if (search.length != 0) {
                        searchTop(ebooks, videos, lessonsRatings, createdDate, search, null, true);
                    } else {
                        searchTop(ebooks, videos, lessonsRatings, createdDate, search, 1);
                    }
                }
            });

            // Filter By Ebooks
            $(document.body).on('click', 'a', function () {
                if (this.classList.contains('ebooks-filter')) {
                    ebooks = true;
                    videos = false;
                    $(".search-top-button").click();
                }
            });

            // Filter By Videos
            $(document.body).on('click', 'a', function () {
                if (this.classList.contains('videos-filter')) {
                    ebooks = false;
                    videos = true;
                    $(".search-top-button").click();
                }
            });

            // Sort By Lessons Rating
            $(document.body).on('click', 'a', function () {
                if (this.classList.contains('lessons-ratings')) {
                    lessonsRatings = true;
                    createdDate = false;
                    $(".search-top-button").click();
                }
            });

            // Sort By Created Date
            $(document.body).on('click', 'a', function () {
                if (this.classList.contains('created-date')) {
                    lessonsRatings = false;
                    createdDate = true;
                    $(".search-top-button").click();
                }
            });

            // Whene Paginations Link Number Clicked
            $(document.body).on('click', 'a', function () {
                if (this.classList.contains('pagenation-link')) {
                    page = $(this).data("id");
                    searchTop(ebooks, videos, lessonsRatings, createdDate, search, page);
                }
            });

            // When Details Buttons Clicked
            $(document.body).on('click', 'button', function () {
                if (this.classList.contains('details')) {
                    var categoryId = $(this).parent().parent().parent().find("input[type=hidden]").val();
                    var contentId = $(this).parent().parent().parent().find("input[name=content]").val();
                    var contentType = $(this).parent().parent().parent().find("input[name=content-type]").val();
                    redirectToGuestDetails(categoryId, contentId, contentType);
                }
            });

            // When Or Card Item Od Every Video Or Ebook Clicked
            $(".ourHolder").on("click", function () {
                //var categoryId = $(this).find("input[type=hidden]").val();
                //var contentId = $(this).find("input[name=content]").val();
                //var contentType = $(this).find("input[name=content-type]").val();
                //redirectToCategoriesLessons(categoryId, contentId, contentType);
            });



            // Search
            function searchTop(ebooks, videos, lessonsRatings, createdDate, search, page = null, renderPagenation = false) {
                var sendData = {
                    ebooks: ebooks,
                    videos: videos,
                    lessonsRatings: lessonsRatings,
                    createdDate: createdDate,
                    search: search,
                    page: page
                };
                getProductsByFilters(sendData, function (response_data) {
                    render(response_data, videos, ebooks, renderPagenation);
                });
            };




            // Contents Render UI Function
            function render(data, videos, ebooks, renderPagination = false) {
                // ratingsAVG, uploadDate
                if (lessonsRatings) {
                    $(".lessons-ratings").addClass("active");
                    $(".created-date").removeClass("active");
                } else if (createdDate) {
                    $(".created-date").addClass("active");
                    $(".lessons-ratings").removeClass("active");
                }
                if (data.ebooks && ebooks) {
                    $(".ebooks-filter").addClass("active");
                    $(".videos-filter").removeClass("active");
                    $(".contents").empty();
                    if (renderPagination) {
                        getPageSize(function (pagesize) {
                            var pages = data.ebooks.length / pagesize;
                            pages = pages === 0 ? 1 : pages;
                            RenderPaginationButtons(pages);
                        });
                    }
                    var counter = 0;
                    data.ebooks.forEach(ebook => {
                        counter++;
                        getCategory(ebook.categoryId, function (category) {
                            getUserById(ebook.creatorId, function (creator) {
                                getPDF(ebook.ebookFilePath, function(pdfFile) {
                                    var userAuthorized = @User.Identity.IsAuthenticated.ToString().ToLower();
                                    var ratingFor;
                                    if (userAuthorized) {
                                        ratingFor = `
                                            <iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
                                            <form id="ebook-rating-form" method="post" action="/api/Ebook/AddRate" target="dummyframe">
                                                <input type="hidden" id="ebookId" name="ebookId" value="${ebook.id}">
                                                <input name="rate"
                                                        class="rating rating-loading rate"
                                                        data-min="0"
                                                        data-max="5"
                                                        data-step="0.1"
                                                        value="${ebook.ratingsAVG}"
                                                        onchange="this.form.submit()">
                                                <!--<input type="submit" value="Submit" />-->
                                            </form>
                                            `
                                    } else {
                                        ratingFor = `
                                            <iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
                                            <form id="ebook-rating-form" method="post" action="/api/Ebook/AddRate" target="dummyframe">
                                                <input type="hidden" id="ebookId" name="ebookId" value="${ebook.id}">
                                                <input name="rate"
                                                        class="rating rating-loading rate"
                                                        data-min="0"
                                                        data-max="5"
                                                        data-step="0.1"
                                                        value="${ebook.ratingsAVG}"
                                                        disabled
                                                        onchange="this.form.submit()">
                                                <!--<input type="submit" value="Submit" />-->
                                            </form>
                                        `
                                    }
                                    $(".contents").append(`
                                        <div class="col-md-3 ourHolder" id="ourHolder">
                                            <input type="hidden" id="category" name="category" value="${category.id}">
                                            <input type="hidden" id="content" name="content" value="${ebook.id}">
                                            <input type="hidden" id="content-type" name="content-type" value="ebook">
                                            <div class="card item" id="card-ebook">
                                             <img class="card-book-img" alt="Cover Foto" src="${ebook.ebookImagePath}" style="height: 150px; text-align: center;" />
                                            <p style="text-align:center;margin-top:14px;"><b>${ebook.title}</b>
                                            <hr />
                                                <div class="card-body ">
                                                   <p><img class="img-icon-index" src="../assets/images/icons/icons-person.png" alt="person" />  ${creator.fullName}</p>
                                                    <p><img class="img-icon-index" src="../assets/images/icons/icon-calendar.png" alt="video" /><small> ${ebook.uploadDate.split("T")[0]} </small></p>
                                                    <br />
                                                    `
                                                    + ratingFor +
                                                    `
                                                    <br />
                                                    <button class="btn btn-purple btn-lg details">Details</button>
                                                    ` + displayReadButton(userAuthorized, ebook.id) + `
                                                </div>
                                            </div>
                                        </div>
                                    `);
                                    var ratingInput = $('input[name="rate"]');
                                    $(ratingInput).rating();

                                });
                            });
                        });
                    });
                }
                if (data.videos && videos) {
                    $(".ebooks-filter").removeClass("active");
                    $(".videos-filter").addClass("active");
                    $(".contents").empty();
                    if (renderPagination) {
                        getPageSize(function (pagesize) {
                            console.log(pagesize);
                            var pages = data.videos.length / pagesize;
                            pages = pages === 0 ? 1 : pages;
                            RenderPaginationButtons(pages);
                        });
                    }
                    data.videos.forEach(video => {
                        getCategory(video.categoryId, function (category) {
                            getUserById(video.creatorId, function (creator) {
                                var userAuthorized = @User.Identity.IsAuthenticated.ToString().ToLower();
                                var ratingFor;
                                if (userAuthorized) {
                                    ratingFor = `
                                        <iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
                                        <form id="video-rating-form" method="post" action="/api/Video/AddRate" target="dummyframe">
                                            <input type="hidden" id="videoId" name="videoId" value="${video.id}">
                                            <input name="rate"
                                                    class="rating rating-loading rate raiting-card"
                                                    data-min="0"
                                                    data-max="5"
                                                    data-step="0.1"
                                                    value="${video.ratingsAVG}"
                                                    onchange="this.form.submit()">
                                            <!--<input type="submit" value="Submit" />-->
                                        </form>
                                        `
                                } else {
                                    ratingFor = `
                                        <iframe name="dummyframe" id="dummyframe" style="display: none;"></iframe>
                                        <form id="video-rating-form" method="post" action="/api/Video/AddRate" target="dummyframe">
                                            <input type="hidden" id="videoId" name="videoId" value="${video.id}">
                                            <input name="rate"
                                                    class="rating rating-loading rate raiting-card"
                                                    data-min="0"
                                                    data-max="5"
                                                    data-step="0.1"
                                                    value="${video.ratingsAVG}"
                                                    disabled
                                                    onchange="this.form.submit()">
                                            <!--<input type="submit" value="Submit" />-->
                                        </form>
                                        `
                                }
                                $(".contents").append(
                                    `
                                    <div class="col-md-3 ourHolder" ">
                                        <input type="hidden" id="category" name="category" value="${category.id}">
                                        <input type="hidden" id="content" name="content" value="${video.id}">
                                        <input type="hidden" id="content-type" name="content-type" value="video">
                                        <div class="card item" id="card-video">
                                            <video class="embed-responsive-item title-video" controls preload="none" poster="${video.thumbnail}" style="width:100%;" controlsList="nodownload">
                                                <source src="${video.videoPath}" type="video/mp4">
                                                Your browser does not support the video tag.
                                            </video>
                                            <!--<img alt="Cover Foto" src="${video.videoImagePath}" style="width:100%;" />-->
                                            <p style="text-align:center;margin-top:14px;"><b>${video.title}</b></p>
                                             <hr>
                                            <div class="card-body">
                                                <p><img class="img-icon-index" src="../assets/images/icons/icons-person.png" alt="person" />  ${creator.fullName}</p>
                                                <p><img class="img-icon-index" src="../assets/images/icons/icon-video.png" alt="video" />${video.duration} Hours </p>
                                                <p><img class="img-icon-index" src="../assets/images/icons/icon-calendar.png" alt="video" /> <small>  ${video.uploadDate.split("T")[0]}</small>  </p>
                                                `
                                                + ratingFor +
                                                `
                                              <br>
                                                <button class="btn btn-purple btn-lg details">Details</button>
                                                ` + displayPlayButton(userAuthorized, video.id) + `
                                            </div>
                                        </div>
                                    </div>
                                `
                                );
                                var ratingInput = $('input[name="rate"]');
                                $(ratingInput).rating();
                            });
                        });
                    });
                }
                $(".ourHolder").on("click", function () {
                    //var categoryId = $(this).find("input[type=hidden]").val();
                    //var contentId = $(this).find("input[name=content]").val();
                    //var contentType = $(this).find("input[name=content-type]").val();
                    //redirectToCategoriesLessons(categoryId, contentId, contentType);
                });
                if (!renderPagination) {
                    updatePaginationButtons();
                }
            }

            // Pagination Buttons Render
            function updatePaginationButtons() {
                if (ebooks) {
                    getEbooksPages(function (pages) {
                        RenderPaginationButtons(pages);
                    });
                } else if (videos) {
                    getVideosPages(function (pages) {
                        RenderPaginationButtons(pages);
                    });
                }
            }

            // Render Pagination Buttons
            function RenderPaginationButtons(pages) {
                $(".pagination-content").empty();
                if (pages > 1) {
                    for (i = 1; i <= pages; i++) {
                        if (i == page) {
                            $(".pagination-content").append(`<li class="page-item active"><a class="pagenation-link" data-id=${i}>${i}</a></li>`);
                        } else {
                            $(".pagination-content").append(`<li class="page-item"><a class="pagenation-link" data-id=${i}>${i}</a></li>`);
                        }
                    }
                }
            }

            // Display or Not Read Button of Ebooks
            function displayReadButton(userAuthorized, id) {
                if (userAuthorized) {
                    return `<button id="ebook-modal-button" class="btn btn-green btn-lg btn-open-modal" data-toggle="modal" data-target="#modal-fullscreen-xl" data-id="${id}">
                                Read
                            </button>`;
                } else {
                    return ``;
                }
            }

            // Display or Not Play Button of Videos
            function displayPlayButton(userAuthorized, id) {
                if (userAuthorized) {
                    return `<button id="video-modal-button" class="btn btn-green btn-lg btn-open-modal more" data-toggle="modal" data-target="#modal-fullscreen-xl" data-id="${id}">
                                Play
                            </button>`;
                } else {
                    return ``;
                }
            }
        });
    </script>

    <script src="~/Scripts/Ratting.js"></script>
}