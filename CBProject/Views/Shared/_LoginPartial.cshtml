@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using CBProject.Models


@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

        <div class="dropdown d-inline-block">
            @{
                //var fullname = ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst("FullName");
                //var user_image = ((System.Security.Claims.ClaimsIdentity)User.Identity).FindFirst("ImagePath");



                var context = new ApplicationDbContext();
                var userStore = new UserStore<ApplicationUser, ApplicationRole, string, IdentityUserLogin, IdentityUserRole, IdentityUserClaim>(context);
                var userManager = new CBProject.ApplicationUserManager(userStore);
                var currentUser = userManager.FindById(User.Identity.GetUserId());
                var roleStore = new RoleStore<ApplicationRole>(context);
                var roleManager = new RoleManager<ApplicationRole>(roleStore);


                var fullName = currentUser.FullName;
                var userImage = currentUser.ImagePath;
                RoleLevel access = RoleLevel.SUPERLOW;

                foreach (var role in currentUser.Roles)
                {
                    var myRole = roleManager.FindById(role.RoleId);
                    if (myRole.Level == RoleLevel.FULL)
                    {
                        access = myRole.Level;
                    }
                    else if (myRole.Level == RoleLevel.PLUSSFULL)
                    {
                        if (access != RoleLevel.FULL)
                        {
                            access = myRole.Level;
                        }
                    }
                    else if (myRole.Level == RoleLevel.MIDDLE)
                    {
                        if (access != RoleLevel.FULL &&
                            access != RoleLevel.PLUSSFULL)
                        {
                            access = myRole.Level;
                        }
                    }
                    else if (myRole.Level == RoleLevel.LOW)
                    {
                        if (access != RoleLevel.FULL &&
                            access != RoleLevel.PLUSSFULL &&
                            access != RoleLevel.MIDDLE)
                        {
                            access = myRole.Level;
                        }
                    }
                    else if (myRole.Level == RoleLevel.SUPERLOW)
                    {
                        if (access != RoleLevel.FULL &&
                            access != RoleLevel.PLUSSFULL &&
                            access != RoleLevel.MIDDLE &&
                            access != RoleLevel.LOW)
                        {
                            access = myRole.Level;
                        }
                    }
                }
            }

            <button class="btn btn-secondary dropdown-toggle"
                    type="button"
                    id="dropdownMenuButton"
                    data-toggle="dropdown"
                    aria-haspopup="true"
                    aria-expanded="false">
                <img class="rounded-circle header-profile-user"
                     src="@userImage"
                     style="height:50px;"
                     alt="Header Avatar">
                <span class="d-none d-xl-inline-block ms-1">@fullName</span>
                <i class="fa fa-arrow-down"></i>
            </button>

            <div class="dropdown-menu dropdown-menu-end">
                <ul>
                    <li>
                        <a href=@Url.Action("Index", "Manage", routeValues: null) key="t-manage">Manage</a>
                    </li>
                    @if (access == RoleLevel.FULL ||
                        access == RoleLevel.PLUSSFULL ||
                        access == RoleLevel.MIDDLE)
                    {
                        <li>
                            <a href=@Url.Action("Index", "Users") key="t-dashboard">Dashboard</a>
                        </li>
                    }
                    <li>
                        <a href="javascript:document.getElementById('logoutForm').submit()" key="t-logout">Log Off</a>
                    </li>
                </ul>

                @*<a class="dropdown-item" href="#"><i class="bx bx-user font-size-16 align-middle me-1"></i> <span key="t-profile">Profile</span></a>
                    <a class="dropdown-item" href="#"><i class="bx bx-wallet font-size-16 align-middle me-1"></i> <span key="t-my-wallet">My Wallet</span></a>
                    <a class="dropdown-item d-block" href="#"><span class="badge bg-success float-end">11</span><i class="bx bx-wrench font-size-16 align-middle me-1"></i> <span key="t-settings">Settings</span></a>
                    <a class="dropdown-item" href="#"><i class="bx bx-lock-open font-size-16 align-middle me-1"></i> <span key="t-lock-screen">Lock screen</span></a>
                    <div class="dropdown-divider"></div>
                    <a class="dropdown-item text-danger" href="javascript:document.getElementById('logoutForm').submit()"><i class="bx bx-power-off font-size-16 align-middle me-1 text-danger"></i> <span key="t-logout">Logout</span></a>*@
            </div>
        </div>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right dropdown d-inline-block">
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
