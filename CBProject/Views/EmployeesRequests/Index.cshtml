@model IEnumerable<CBProject.Models.EntityModels.EmployeeRequest>

@{
    ViewBag.Title = "Index";
}





<h2>Employees Requests</h2>




<div class="table-responsive">
    <table class="table" id="employees-requests">
        <thead>
            <tr>
                <th>ID</th>
                <th>Image</th>
                <th>Created Date</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Message</th>
                <th>Role</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>







@section scripts{
    <script>
        $(document).ready(function () {

            // Get Logged User and hes SubscriptionPakage
            var userAuthorized = @User.Identity.IsAuthenticated.ToString().ToLower();
            var loggedUser = null;
            if (userAuthorized) {
                getLogedUserSync(function (user) {
                    loggedUser = user;
                });
            }

            var table = $("#employees-requests").DataTable({
                ajax: {
                    url: `/api/EmployeeRequest`,
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "ID",
                        render: function (data, type, emp) {
                            return "<a href='/EmployeesRequests/Details/" + emp.id + "'>" + emp.id + "</a>";
                        }
                    },
                    {
                        data: "Image",
                        render: function (data, type, emp) {
                            if (emp.imagePath !== null && emp.imagePath.length > 0) {
                                return `<a href="/EmployeesRequests/Details/${emp.id}" ><img alt="Employee Photo" src="${emp.imagePath}" style="height: 77px;"/></a>`;
                            } else {
                                return `<a href="/EmployeesRequests/Details/${emp.id}" ><img alt="Employee Photo" src="/assets/images/icons/icons-person.png" style="height: 77px;"/></a>`;
                            }
                        }
                    },
                    {
                        data: "Created Date",
                        render: function (data, type, emp) {
                            return "<a>" + emp.cReatedDate + "</a>";
                        }
                    },
                    {
                        data: "First Name",
                        render: function (data, type, emp) {
                            return "<a>" + emp.firstName + "</a>";
                        }
                    },
                    {
                        data: "Last Name",
                        render: function (data, type, emp) {
                            return "<a>" + emp.lastName + "</a>";
                        }
                    },
                    {
                        data: "Email",
                        render: function (data, type, emp) {
                            return "<a>" + emp.email + "</a>";
                        }
                    },
                    {
                        data: "Message",
                        render: function (data, type, emp) {
                            return "<a>" + emp.employeeMessage + "</a>";
                        }
                    },
                    {
                        data: "Role",
                        render: function (data, type, emp) {
                            var roleName = "";
                            getRoleSync(emp.roleId, function (role) {
                                roleName = role.name
                            });
                            return "<a>" + roleName + "</a>";
                        }
                    }
                ],
                createdRow: function (row, data, dataIndex) {

                }
            });
        });
    </script>

    <script src="~/Scripts/Ratting.js"></script>
}





@*<h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CReatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Country)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PostalCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Street)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StreetNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Role.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeMessage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CVPath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImagePath)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CReatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PostalCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Street)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StreetNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Role.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeeMessage)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CVPath)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImagePath)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }

    </table>*@
